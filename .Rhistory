find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
library(datasets)
data(iris)
?iris
iris
iris3
v <- iris3[,,Virginica]
v <- iris3$Virginica
v <- iris3[[virginica]]
v <- iris3[,,3]
v
mean(v[[Sepal L.]])
mean(v[,1])
data(mtcars)
?mtcars
mtcars
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
209.21429-82.63636
solve
source('C:/Users/Greg/coursera/ProgrammingAssignment2/cachematrix.R')
data <- 1:16
m <- matrix(data)
m
m <- matrix(data, 4, 4)
m
z <- makeCacheMatrix(m)
z
z$setinv(cacheSolve)
z$getinv()
z$inv
cacheSolve(z)
v <- matrix(data,4,4)
b <- makeCacheMatrix(v)
v$inv
b$inv
cacheSolve(b)
traceback()
b$get()
data <- rnorm(16)
data
z <- matrix(data,4,4)
z
x <- makeCacheMatrix(z)
x
cacheSolve(x)
cacheSolve(x)
x$get()
x$getinv()
source('C:/Users/Greg/coursera/ProgrammingAssignment2/cachematrix.R')
z <- rnorm(16)
x <- matrix(z,4,4)
x
y <- makeCacheMatrix(x)
y$setinv(cahceSolve)
y$setinv(cacheSolve)
traceback()
y$setinv(cacheSolve)
source('C:/Users/Greg/coursera/ProgrammingAssignment2/cachematrix.R')
x <- matrix(z,4,4)
y <- makeCacheMatrix(x)
y$setinv(cacheSolve)
y$inv
cacheSolve(y)
rawDat <- read.table("household_power_consumption", sep=";", header=true)
rawDat <- read.table("household_power_consumption.txt", sep=";", header=true)
setwd("C:/Users/Greg/coursera/ExData_Plotting1")
rawDat <- read.table("household_power_consumption.txt", sep=";", header=true)
rawDat <- read.table("household_power_consumption.txt", sep=";", header=TRUE)
head(rawDat)
rawDat$Date[i] <- as.Date(rawDat$Date[i], format="%d/%m/%Y")
rawDat <- 0
source('C:/Users/Greg/coursera/ExData_Plotting1/parsefile.R')
source('C:/Users/Greg/coursera/ExData_Plotting1/parsefile.R')
rawDat <- StopWastingMyFuckingTime()
